Compiling the FoldingBrowser Installer Info
============================================


One-time Setup Info:
---------------------------------------------------------------------
I'm currently using NSIS v3.08, but the latest version will work fine from: http://nsis.sourceforge.net/Main_Page
** Make sure to get the normal 32-bit NSIS download (right-hand side of the web page), and not the 3rd party NSIS projects from the bottom of the web page. **

Extra plugin files used:
http://nsis.sourceforge.net/NsProcess_plugin   (Get the version with Unicode)
Included at:  ..\Install\Include
Included at:  ..\Install\Plugins

Front-end used is 'HM NIS Edit', from:   http://hmne.sourceforge.net/

I typically associate *.nsi files with the 'HM NIS Edit' executable so they can be opened and accessed easily.
    -If you go to the ..\Install folder, and right-click one of the .nsi files
    -Select 'Open With...'
    -Then 'Choose default program'
    -And browse to the 'HM NIS Edit' executable file at: C:\Program Files (x86)\HMSoft\NIS Edit\nisedit.exe
---------------------------------------------------------------------




-------------------------------------------
For compiling the FoldingBrowser Installer:
-------------------------------------------
The NSIS installer scripts are located at:   ..\Install

1. You will need the Microsoft Visual C++ Redistributable 2019 - 32-bit (x86) installer (vc_redist.x86.exe) from: https://aka.ms/vs/17/release/vc_redist.x86.exe
and copy it to:  ..\Install\VCx86Redist

2. You will need the latest CureCoin wallet (curecoin-qt.exe) from GitHub: https://github.com/cygnusxi/CurecoinSource/releases
and copy it to:  ..\Install\CureCoin

3. For the 'Blockchain Included' installers, the blockchain files should be copied to: ..\Install\CureCoin

4. Compile the CureCoin installer script first. The output goes to: ..\Install\CureInst
(this was done mostly for an easy separate uninstaller for the CureCoin Wallet)

5. Compile the FoldingBrowser script last. This uses the 'Release' version of the FoldingBrowser executable compiled with Visual Studio.


------------------------------
Visual Studio Compiling Notes:
------------------------------
Anytime the CefSharp DLLs are upgraded to the next version:
   -With Visual Studio 2015 closed, manually delete any previous versions of the CefSharp DLLs from the Debug & Release folders.
   -Use NuGet Package Manager, command in Visual Studio to update DLLs:    update-package
   -Then, do a Rebuild solution, and save the project changes
   -If there are weird compiler errors (Builds OK, but still shows errors): closing and reopening Visual Studio usually fixes the initial compiling errors after an upgrade.
   -(Typically not needed): The project reference folder path to the previous DLLs may need to be manually updated in the project settings to the new package folders.